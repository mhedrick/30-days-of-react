{"version":3,"file":"component---src-pages-day-18-index-js-5c5e744036672ece67ea.js","mappings":"8NAOMA,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,IAAAA,IAAAA,EAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAcc,OAddA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAAAA,MACFC,MAAQ,CACJC,MAAO,EACPC,UAAW,EACXC,QAAS,GAHL,EAaRC,eAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAgB,4FAEA,sCAFA,kBAIeC,IAAAA,IAFf,uCAFA,cAIFC,EAJE,gBAKWA,EAASC,KALpB,OAKFA,EALE,OAMR,EAAKC,SAAS,CACVD,KAAAA,EACFN,MAAOM,EAAKE,OACZP,UAAWK,EACRG,KAAI,SAAAC,GAAG,OAAI,EAAKC,gBAAgBD,EAAIE,OAAOC,aAC3CC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAAMV,EAAKE,OACnCN,QAASI,EACRG,KAAI,SAAAC,GAAG,OAAI,EAAKC,gBAAgBD,EAAIO,cACpCH,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAAMV,EAAKE,SAd3B,kDAiBRU,QAAQC,IAAR,MAjBQ,6DAddrB,EAAAA,EAAAA,GAAAA,EAAAA,GAcc,kBA6Bf,OA7Be,EARhBsB,kBAAA,WACIC,KAAKlB,iBACR,EAEDQ,gBAAA,SAAgBD,GACZ,OAAOA,EAAIY,MAAM,OAAOR,QAAO,SAACC,EAAGC,GAAJ,OAAUO,SAASR,GAAKQ,SAASP,MAAM,GACzE,EAuBDQ,OAAA,WACI,OACI,gBAAC,EAAAC,SAAD,KACI,uCACA,sCAAcJ,KAAKtB,MAAMC,MAAzB,SACA,mDAA2BqB,KAAKtB,MAAME,UAAUyB,YAAY,GAA5D,iBAA8EL,KAAKtB,MAAMG,QAAQwB,YAAY,GAA7G,aAGX,EA3CC5B,CAAiB6B,EAAAA,WAyDvB,UAVkB,WACd,OACI,gBAAC,IAAD,KACI,gBAAC,IAAD,CAAWC,UAAU,eACjB,gBAAC9B,EAAD","sources":["webpack://30-days-of-react/./src/pages/Day18/index.js"],"sourcesContent":["import React, { Component, Fragment } from \"react\"\nimport Layout from '../../components/layout'\nimport Container from 'react-bootstrap/Container';\n\nimport axios from 'axios'\n\n\nclass CatFacts extends Component {\n    state = {\n        count: 0,\n        avgWeight: 0,\n        avgLife: 0\n    }\n    componentDidMount() {\n        this.fetchCatFacts();\n    }\n\n    averageCategory(cat) {\n        return cat.split(' - ').reduce((a, b) => parseInt(a) + parseInt(b)) / 2;\n    }\n\n    fetchCatFacts = async () => {\n\n        const url = 'https://api.thecatapi.com/v1/breeds';\n        try {\n            const response = await axios.get(url);\n            const data = await response.data;\n            this.setState({\n                data,\n              count: data.length,\n              avgWeight: data\n                .map(cat => this.averageCategory(cat.weight.imperial))\n                .reduce((a, b) => a + b ) / data.length,\n              avgLife: data\n              .map(cat => this.averageCategory(cat.life_span))\n              .reduce((a, b) => a + b ) / data.length,\n            });\n          } catch (error) {\n            console.log(error);\n          }\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <h1>Cat Facts</h1>\n                <p>There are {this.state.count} cats</p>\n                <p>On average, they weigh {this.state.avgWeight.toPrecision(4)} lbs and live {this.state.avgLife.toPrecision(4)} years </p>\n            </Fragment>\n        )\n    }\n}\n\n// markup \nconst IndexPage = () => {\n    return (\n        <Layout>\n            <Container className=\"text-center\">\n                <CatFacts />\n            </Container>\n        </Layout>\n    )\n}\n\nexport default IndexPage;\n"],"names":["CatFacts","state","count","avgWeight","avgLife","fetchCatFacts","axios","response","data","setState","length","map","cat","averageCategory","weight","imperial","reduce","a","b","life_span","console","log","componentDidMount","this","split","parseInt","render","Fragment","toPrecision","Component","className"],"sourceRoot":""}