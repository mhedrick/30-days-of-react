{"version":3,"file":"component---src-pages-day-06-index-js-2ad74f7153fb2d10b41d.js","mappings":"wKAMA,I,4CAFIA,EAAU,GAENC,EAAI,EAAGA,EAAI,GAAIA,IACnBD,EAAQC,GAAKA,ECSjB,IDLA,IAAMC,EAAU,SAAAC,GACZ,IAAI,IAAIC,EAAI,EAAGC,EAAIC,KAAKC,KAAKJ,GAAMC,GAAKC,EAAGD,IACvC,GAAGD,EAAMC,GAAM,EAAG,OAAO,EAC7B,OAAOD,EAAM,GAajB,EAVkB,WACd,OACI,uBAAKK,UAAU,yBACVR,EAAQS,KAAI,SAACR,GAAD,OACT,uBAAKO,UAAcE,EAAAA,GAAL,KAAaR,EAAQD,GAAKU,EAAAA,GAASV,EAAI,GAAM,GAAKW,EAAAA,KAASX,QCjBrFD,EAAU,GAERa,EAAY,WAGd,IAFA,IAAIC,EAAM,mBACNC,EAAQ,GACHX,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1BW,GAASD,EADGR,KAAKU,MAAMV,KAAKW,SAAWH,EAAII,SAG7C,MAAO,IAAMH,GAGTd,EAAI,EAAGA,EAAI,GAAIA,IACnBD,EAAQC,GAAKY,IAGjB,IAUA,EAVkB,WACd,OACI,uBAAKL,UAAU,yBACVR,EAAQS,KAAI,SAACR,GAAD,OACT,uBAAKO,UAAWE,EAAAA,GAAMS,MAAO,CAACC,gBAAiBnB,IAAKA,Q,sCCjB9DoB,EAAQC,EAAAA,EAAAA,GAAAA,WAsBd,EApBkB,WACd,OACI,uBAAKd,UAAU,QACVc,EAAAA,EAAAA,KAAyB,gBAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,WAAX,OACtB,gBAACC,EAAA,EAAD,CAAKjB,UAAU,sBACX,gBAACkB,EAAA,EAAD,CAAKC,GAAI,EAAGnB,UAAU,YACjBe,GAEL,gBAACG,EAAA,EAAD,KACI,gBAACE,EAAA,EAAD,CAAaC,IAAML,EAAWH,EAAS,OAE3C,gBAACK,EAAA,EAAD,CAAKC,GAAI,GACJH,EAAWM,wBCZ9BC,EAAY,CAAC,gBAAC,EAAD,MAAe,gBAAC,EAAD,MAAe,gBAAC,EAAD,OAYjD,EARkB,WACd,OACI,gBAAC,IAAD,KACI,gBAAC,IAAD,CAAcA,UAAWA","sources":["webpack://30-days-of-react/./src/components/Day06/Exercise1.js","webpack://30-days-of-react/./src/components/Day06/Exercise2.js","webpack://30-days-of-react/./src/components/Day06/Exercise3.js","webpack://30-days-of-react/./src/pages/Day06/index.js"],"sourcesContent":["import * as React from \"react\"\n\nimport {tile, odd, prime} from  '../../components/Day06/styles.module.css';\n\nlet numbers = [];\n\nfor(let n = 0; n < 31; n++){\n    numbers[n] = n;\n}\n\n//shamelessly taken from stack overflow\nconst isPrime = num => {\n    for(let i = 2, s = Math.sqrt(num); i <= s; i++)\n        if(num % i === 0) return false; \n    return num > 1;\n}\n\nconst Exercise1 = () => {\n    return (\n        <div className=\"d-flex flex-wrap mt-2\">\n            {numbers.map((n) => (\n                <div className={`${tile} ${isPrime(n) ? prime : (n % 2 === 1 && odd)}`}>{n}</div>\n            ))\n            }\n        </div>)\n}\n\nexport default Exercise1","import * as React from \"react\"\n\nimport {tile} from  '../../components/Day06/styles.module.css';\n\nlet numbers = [];\n\nconst hexaColor = () => {\n    let str = '0123456789abcdef'\n    let color = ''\n    for (let i = 0; i < 6; i++) {\n      let index = Math.floor(Math.random() * str.length)\n      color += str[index]\n    }\n    return '#' + color\n  }\n\nfor(let n = 0; n < 31; n++){\n    numbers[n] = hexaColor();\n}\n\nconst Exercise2 = () => {\n    return (\n        <div className=\"d-flex flex-wrap mt-2\">\n            {numbers.map((n) => (\n                <div className={tile} style={{backgroundColor: n}}>{n}</div>\n            ))\n            }\n        </div>)\n}\n\nexport default Exercise2;","import * as React from \"react\"\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\nimport { tenHighestPopulation } from '../../data/ten_most_highest_populations';\n\nconst total = tenHighestPopulation[0].population;\n\nconst Exercise3 = () => {\n    return (\n        <div className=\"mt-2\">\n            {tenHighestPopulation.map(({country, population}) => (\n                <Row className=\"align-items-center\">\n                    <Col md={2} className=\"text-end\">\n                        {country}\n                    </Col>\n                    <Col>\n                        <ProgressBar now={(population/total) * 100} />\n                    </Col>\n                    <Col md={2}>\n                        {population.toLocaleString()}\n                    </Col>\n                </Row>\n            ))}\n\n        </div>)\n}\n\nexport default Exercise3;","import * as React from \"react\"\nimport Layout from '../../components/layout'\nimport ExerciseTabs from '../../components/exerciseTabs'\n\n\nimport Exercise1 from '../../components/Day06/Exercise1';\nimport Exercise2 from '../../components/Day06/Exercise2';\nimport Exercise3 from '../../components/Day06/Exercise3';\n\nconst exercises = [<Exercise1 />, <Exercise2 />, <Exercise3 />];\n\n\n// markup \nconst IndexPage = () => {\n    return (\n        <Layout>\n            <ExerciseTabs exercises={exercises} />\n        </Layout>\n    )\n}\n\nexport default IndexPage;\n"],"names":["numbers","n","isPrime","num","i","s","Math","sqrt","className","map","tile","prime","odd","hexaColor","str","color","floor","random","length","style","backgroundColor","total","tenHighestPopulation","country","population","Row","Col","md","ProgressBar","now","toLocaleString","exercises"],"sourceRoot":""}