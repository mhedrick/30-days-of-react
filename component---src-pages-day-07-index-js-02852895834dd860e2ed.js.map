{"version":3,"file":"component---src-pages-day-07-index-js-02852895834dd860e2ed.js","mappings":"8NAiCA,EA5BMA,SAAAA,GACF,WAAYC,GAAO,IAAD,GACd,cAAMA,IAAN,MAQJC,QAAU,SAAAC,GACN,IAAI,IAAIC,EAAI,EAAGC,EAAIC,KAAKC,KAAKJ,GAAMC,GAAKC,EAAGD,IACvC,GAAGD,EAAMC,GAAM,EAAG,OAAO,EAC7B,OAAOD,EAAM,GAVb,EAAKK,QAAU,GAEf,IAAI,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACnB,EAAKD,QAAQC,GAAKA,EALR,SAwBjB,OAzBCT,EAAAA,EAAAA,GAAAA,EAAAA,GAQD,YAQDU,OAAA,WAAU,IAAD,OACP,OACE,uBAAKC,UAAU,yBACVC,KAAKJ,QAAQK,KAAI,SAACJ,GAAD,OACd,uBAAKE,UAAcG,EAAAA,GAAL,KAAa,EAAKZ,QAAQO,GAAKM,EAAAA,GAASN,EAAI,GAAM,GAAKO,EAAAA,KAASP,QAKzF,EAzBCT,CAAkBiB,EAAAA,WCgCxB,EAjCMC,SAAAA,GACF,WAAYjB,GAAQ,IAAD,GACf,cAAMA,IAAN,MAQJkB,UAAY,WAGR,IAFA,IAAIC,EAAM,mBACNC,EAAQ,GACHjB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAExBiB,GAASD,EADGd,KAAKgB,MAAMhB,KAAKiB,SAAWH,EAAII,SAG/C,MAAO,IAAMH,GAdb,EAAKb,QAAU,GAEf,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACpB,EAAKD,QAAQC,GAAK,EAAKU,YALZ,SA4BlB,OA7BCD,EAAAA,EAAAA,GAAAA,EAAAA,GAQD,YAYDR,OAAA,WACI,OACI,uBAAKC,UAAU,yBACVC,KAAKJ,QAAQK,KAAI,SAACJ,GAAD,OACd,uBAAKE,UAAWG,EAAAA,GAAMW,MAAO,CAAEC,gBAAiBjB,IAAMA,QAKrE,EA7BCS,CAAkBD,EAAAA,W,sCCkCxB,EA/BMU,SAAAA,GACF,WAAY1B,GAAQ,IAAD,SACf,cAAMA,IAAN,MAIJ2B,cAAgB,SAACC,GACb,OAAQA,EAAW,EAAKC,MAAS,KAJjC,EAAKA,MAAQC,EAAAA,EAAAA,GAAAA,WAFE,EA2BlB,OA5BCJ,EAAAA,EAAAA,GAAAA,EAAAA,GAID,YAMDjB,OAAA,WAAU,IAAD,OACL,OACI,uBAAKC,UAAU,QACVoB,EAAAA,EAAAA,KAAyB,gBAAEC,EAAF,EAAEA,QAASH,EAAX,EAAWA,WAAX,OACtB,gBAACI,EAAA,EAAD,CAAKtB,UAAU,sBACX,gBAACuB,EAAA,EAAD,CAAKC,GAAI,EAAGxB,UAAU,YACjBqB,GAEL,gBAACE,EAAA,EAAD,KACI,gBAACE,EAAA,EAAD,CAAaC,IAAK,EAAKT,cAAcC,MAEzC,gBAACK,EAAA,EAAD,CAAKC,GAAI,GACJN,EAAWS,wBAMnC,EA5BCX,CAAkBV,EAAAA,WCElBsB,EAAY,CAAC,gBAAC,EAAD,MAAe,gBAAC,EAAD,MAAe,gBAAC,EAAD,OAYjD,EARkB,WACd,OACI,gBAAC,IAAD,KACI,gBAAC,IAAD,CAAcA,UAAWA","sources":["webpack://30-days-of-react/./src/components/Day07/Exercise1.js","webpack://30-days-of-react/./src/components/Day07/Exercise2.js","webpack://30-days-of-react/./src/components/Day07/Exercise3.js","webpack://30-days-of-react/./src/pages/Day07/index.js"],"sourcesContent":["import * as React from \"react\"\n\nimport {tile, odd, prime} from  '../../components/Day06/styles.module.css';\n\n\nclass Exercise1 extends React.Component {\n    constructor(props){\n        super(props);\n        this.numbers = [];\n\n        for(let n = 0; n < 31; n++){\n            this.numbers[n] = n;\n        }\n    }\n\n    isPrime = num => {\n        for(let i = 2, s = Math.sqrt(num); i <= s; i++)\n            if(num % i === 0) return false; \n        return num > 1;\n    }\n\n    render() {\n      return (\n        <div className=\"d-flex flex-wrap mt-2\">\n            {this.numbers.map((n) => (\n                <div className={`${tile} ${this.isPrime(n) ? prime : (n % 2 === 1 && odd)}`}>{n}</div>\n            ))\n            }\n        </div>\n      )\n    }\n  }\n\nexport default Exercise1","import * as React from \"react\"\n\nimport { tile } from '../../components/Day06/styles.module.css';\n\nclass Exercise2 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.numbers = [];\n\n        for (let n = 0; n < 31; n++) {\n            this.numbers[n] = this.hexaColor();\n        }\n    }\n\n    hexaColor = () => {\n        let str = '0123456789abcdef'\n        let color = ''\n        for (let i = 0; i < 6; i++) {\n            let index = Math.floor(Math.random() * str.length)\n            color += str[index]\n        }\n        return '#' + color\n    }\n\n    render() {\n        return (\n            <div className=\"d-flex flex-wrap mt-2\">\n                {this.numbers.map((n) => (\n                    <div className={tile} style={{ backgroundColor: n }}>{n}</div>\n                ))\n                }\n            </div>\n        )\n    }\n}\n\n\nexport default Exercise2;","import * as React from \"react\"\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\nimport { tenHighestPopulation } from '../../data/ten_most_highest_populations';\n\nclass Exercise3 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.total = tenHighestPopulation[0].population;\n    }\n\n    getPercentage = (population) => {\n        return (population/this.total) * 100;\n    }\n\n    render() {\n        return (\n            <div className=\"mt-2\">\n                {tenHighestPopulation.map(({country, population}) => (\n                    <Row className=\"align-items-center\">\n                        <Col md={2} className=\"text-end\">\n                            {country}\n                        </Col>\n                        <Col>\n                            <ProgressBar now={this.getPercentage(population)} />\n                        </Col>\n                        <Col md={2}>\n                            {population.toLocaleString()}\n                        </Col>\n                    </Row>\n                ))}\n    \n            </div>)\n    }\n}\n\nexport default Exercise3;","import * as React from \"react\"\nimport Layout from '../../components/layout'\nimport ExerciseTabs from '../../components/exerciseTabs'\n\n\nimport Exercise1 from '../../components/Day07/Exercise1';\nimport Exercise2 from '../../components/Day07/Exercise2';\nimport Exercise3 from '../../components/Day07/Exercise3';\n\nconst exercises = [<Exercise1 />, <Exercise2 />, <Exercise3 />];\n\n\n// markup \nconst IndexPage = () => {\n    return (\n        <Layout>\n            <ExerciseTabs exercises={exercises} />\n        </Layout>\n    )\n}\n\nexport default IndexPage;\n"],"names":["Exercise1","props","isPrime","num","i","s","Math","sqrt","numbers","n","render","className","this","map","tile","prime","odd","React","Exercise2","hexaColor","str","color","floor","random","length","style","backgroundColor","Exercise3","getPercentage","population","total","tenHighestPopulation","country","Row","Col","md","ProgressBar","now","toLocaleString","exercises"],"sourceRoot":""}